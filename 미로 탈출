from collections import deque

n,m = map(int,input().split())

graph = []

di = [-1,1,0,0]
dj = [0,0,-1,1]

for i in range(n):
        graph.append(list(map(int,input())))

def bfs(i, j):
    queue = deque() 
    queue.append((i,j))
    while queue:
        
        i,j = queue.popleft()
        

        for k in range(4):
            ni = i + di[k]
            nj = j + dj[k]

            if ni <0 or ni >= n or nj<0 or nj>=m:
                continue

            if graph[ni][nj] == 0:
                continue

            if graph[ni][nj] == 1:
                graph[ni][nj] = graph[i][j] + 1
                queue.append((ni,nj))

    return graph[n-1][m-1]
        
print(bfs(0,0))